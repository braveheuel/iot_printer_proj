#! /usr/bin/env python3
# -*- coding: utf-8 -*-
# vim:fenc=utf-8
#
# Copyright © 2015 ch <ch@silversurfer.deepspace.local>
#
# Distributed under terms of the MIT license.

"""
Print party gag after keypress
Usage:
    advent.py [<day>]
"""
from escpos import printer
from PIL import Image
import pigpio
import logging
from datetime import date
import pathlib
import click
import aiomas
import asyncio

PRINT_WIDTH = 384
DOCUMENT_ROOT = "/home/ch/Dokumente/advent"
TASTER = 4

START_DATE = date(2017, 12, 1)
END_DATE = date(2017, 12, 24)
ESCPOS_PRINTER = printer.Dummy()

logging.basicConfig(format='%(asctime)s %(message)s', level=logging.DEBUG)

def umlaut_to_ASCII(text):
    """Replace umlaut with ascii compliant chars

    :param text: String to replace
    :returns: text with replaced characters
    """
    text = text.replace('ä', "ae")
    text = text.replace('Ä', "Ae")
    text = text.replace('ö', "oe")
    text = text.replace('Ö', "Oe")
    text = text.replace('ü', "ue")
    text = text.replace('Ü', "Ue")
    text = text.replace('ß', "ss")
    return text

def print_advent_day():
    """Evaluate if print date is in date range"""
    if date.today() < START_DATE:
        logging.info("Too early!")
        ESCPOS_PRINTER.hw("init")
        ESCPOS_PRINTER.text("\nZu frueh gedrueckt!")
        ESCPOS_PRINTER.text("\n\n\n\n")
    elif date.today() > END_DATE:
        logging.info("Too late!")
        ESCPOS_PRINTER.hw("init")
        ESCPOS_PRINTER.text("\nZu spaet gedrueckt!")
        ESCPOS_PRINTER.text("\n\n\n\n")
    else:
        print_day(date.today().day)
    aiomas.run(_final_print())


def print_day(advent_day):
    """Print specified day

    :param advent_day: Number of date to print
    """
    logging.info("Starting with advent day %s", advent_day)
    img = Image.open("{0}/{1}.png".format(DOCUMENT_ROOT, advent_day))
    ESCPOS_PRINTER.image(img)
    ESCPOS_PRINTER.text("\n")
    filename = "{0}/{1}.txt".format(DOCUMENT_ROOT, advent_day)
    if pathlib.Path(filename).exists():
        text_file = open(filename, 'r')
        logging.info("Reading text...")
        lines = text_file.readlines()
        for i in lines:
            if i == "\n":
                ESCPOS_PRINTER.text("\n")
            else:
                ESCPOS_PRINTER.block_text(umlaut_to_ASCII(i))
                ESCPOS_PRINTER.text("\n")
        text_file.close()
        logging.info("Printing text done.")
    else:
        logging.info("No text found!")

    ESCPOS_PRINTER.text("\n\n\n\n")
    logging.info("Printing done.")

@asyncio.coroutine
def _final_print():
    rpc_con = yield from aiomas.rpc.open_connection(('raspberrypi', 5555), codec=aiomas.MsgPack)
    try:
        session = yield from rpc_con.remote.start_session()
        yield from rpc_con.remote.raw_data(session, ESCPOS_PRINTER.output)
        yield from rpc_con.remote.final_print(session)
        del ESCPOS_PRINTER._output_list[:]
    except Exception as e:
        print("Error occurred!", e)
    finally:
        yield from rpc_con.remote.close_session(session)
        yield from rpc_con.close()

@click.command()
@click.argument("day", nargs=-1)
def main(day):
    """Main Function

    :param args: Arguments found by docopt
    """
    logging.info("Starting...")
    pi_instance = pigpio.pi()
    pi_instance.set_mode(TASTER, pigpio.INPUT)

    if day:
        print_day(day)
    else:
        logging.info("Going into loop...")
        while True:
            if pi_instance.wait_for_edge(TASTER):
                logging.info("Taster was pressed!")
                print_advent_day()
        logging.debug("Left the loop!")


if __name__ == "__main__":
    main()
